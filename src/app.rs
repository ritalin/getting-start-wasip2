// Generated by `wit-bindgen` 0.37.0. DO NOT EDIT!
// Options used:
//   * default-bindings-module: "crate::app"
#[allow(dead_code, clippy::all)]
pub mod anonymous {
  pub mod greeting {

    #[allow(dead_code, unused_imports, clippy::all)]
    pub mod say {
      #[used]
      #[doc(hidden)]
      static __FORCE_SECTION_REF: fn() =
      super::super::super::__link_custom_section_describing_imports;
      
      use super::super::super::_rt;
      #[allow(unused_unsafe, clippy::all)]
      pub fn hello() -> _rt::String{
        unsafe {
          #[repr(align(4))]
          struct RetArea([::core::mem::MaybeUninit::<u8>; 8]);
          let mut ret_area = RetArea([::core::mem::MaybeUninit::uninit(); 8]);
          let ptr0 = ret_area.0.as_mut_ptr().cast::<u8>();
          #[cfg(target_arch = "wasm32")]
          #[link(wasm_import_module = "anonymous:greeting/say@0.0.1")]
          extern "C" {
            #[link_name = "hello"]
            fn wit_import1(_: *mut u8, );
          }

          #[cfg(not(target_arch = "wasm32"))]
          extern "C" fn wit_import1(_: *mut u8, ){ unreachable!() }
          wit_import1(ptr0);
          let l2 = *ptr0.add(0).cast::<*mut u8>();
          let l3 = *ptr0.add(4).cast::<usize>();
          let len4 = l3;
          let bytes4 = _rt::Vec::from_raw_parts(l2.cast(), len4, len4);
          let result5 = _rt::string_lift(bytes4);
          result5
        }
      }

    }

  }
}
mod _rt {
  #![allow(dead_code, clippy::all)]
  pub use alloc_crate::string::String;
  pub use alloc_crate::vec::Vec;
  pub unsafe fn string_lift(bytes: Vec<u8>) -> String {
    if cfg!(debug_assertions) {
      String::from_utf8(bytes).unwrap()
    } else {
      String::from_utf8_unchecked(bytes)
    }
  }
  extern crate alloc as alloc_crate;
}

#[cfg(target_arch = "wasm32")]
#[unsafe(link_section = "component-type:wit-bindgen:0.37.0:anonymous:app@0.0.1:app:encoded world")]
#[doc(hidden)]
#[allow(clippy::octal_escapes)]
pub static __WIT_BINDGEN_COMPONENT_TYPE: [u8; 206] = *b"\
\0asm\x0d\0\x01\0\0\x19\x16wit-component-encoding\x04\0\x07U\x01A\x02\x01A\x02\x01\
B\x02\x01@\0\0s\x04\0\x05hello\x01\0\x03\0\x1canonymous:greeting/say@0.0.1\x05\0\
\x04\0\x17anonymous:app/app@0.0.1\x04\0\x0b\x09\x01\0\x03app\x03\0\0\0G\x09produ\
cers\x01\x0cprocessed-by\x02\x0dwit-component\x070.223.0\x10wit-bindgen-rust\x06\
0.37.0";

#[inline(never)]
#[doc(hidden)]
pub fn __link_custom_section_describing_imports() {
  wit_bindgen::rt::maybe_link_cabi_realloc();
}

